trigger:
  batch: true
  branches:
    include:
    - master

pr:
  branches:
    include:
    - master

variables:
  MAVEN_REPO_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
  WEBRTC_CACHE_BRANCH: 4044
  WEBRTC_INSTALL_FOLDER: $(Pipeline.Workspace)/webrtc-build
  WEBRTC_CHECKOUT_FOLDER: $(Pipeline.Workspace)/webrtc-checkout

strategy:
  matrix:
    linux:
      imageName: "ubuntu-latest"
    mac:
      imageName: "macos-latest"
    windows:
      imageName: "windows-latest"

pool:
  vmImage: $(imageName)

steps:
- task: Bash@3
  displayName: "Set up Linux audio system"
  condition: eq(variables['Agent.OS'], 'Linux')
  inputs:
    targetType: "inline"
    script: |
      sudo apt-get install -y pulseaudio libpulse-dev libasound2-dev libudev-dev libv4l-dev
      # Required for testing
      pulseaudio --start

- task: DownloadSecureFile@1
  displayName: "Download Maven settings"
  name: mvnSettings
  inputs:
    secureFile: settings.xml

- task: Cache@2
  displayName: "Set up WebRTC cache"
  inputs:
    key: 'webrtc | $(WEBRTC_CACHE_BRANCH) | "$(Agent.OS)" | "$(Agent.OSArchitecture)" | webrtc-jni/pom.xml'
    restoreKeys: webrtc | $(WEBRTC_CACHE_BRANCH) | "$(Agent.OS)" | "$(Agent.OSArchitecture)"
    path: $(WEBRTC_INSTALL_FOLDER)

- task: Cache@2
  displayName: "Set up Maven cache"
  inputs:
    key: 'maven | "$(Agent.OS)" | **/pom.xml, !**/target/**'
    restoreKeys: |
      maven | "$(Agent.OS)"
      maven

- task: Maven@3
  displayName: "Build"
  inputs:
    mavenOptions: '-Xmx3072m $(MAVEN_OPTS)'
    jdkVersionOption: "1.11"
    publishJUnitResults: false
    goals: "package"
    options: "-DskipTests -s $(mvnSettings.secureFilePath)"

- task: Maven@3
  displayName: "Test"
  inputs:
    mavenOptions: '-Xmx3072m $(MAVEN_OPTS)'
    jdkVersionOption: "1.11"
    mavenPomFile: 'webrtc/pom.xml'
    goals: "jar:jar surefire:test"
    options: "-s $(mvnSettings.secureFilePath)"
    testRunTitle: "$(Agent.OS) ($(Agent.OSArchitecture))"
- task: CopyFiles@2
  inputs:
    sourceFolder: $(Build.SourcesDirectory)
    contents: 'webrtc-jni/target/webrtc-java-*.jar' 
    targetFolder: $(Build.ArtifactStagingDirectory)
    overWrite: true
- task: CopyFiles@2
  inputs:
    sourceFolder: $(Build.SourcesDirectory)
    contents: 'webrtc/target/webrtc-java-*.jar' 
    targetFolder: $(Build.ArtifactStagingDirectory)
    overWrite: true
- task: CopyFiles@2
  inputs:
    sourceFolder: $(Build.SourcesDirectory)
    contents: 'webrtc-demo/webrtc-demo-api/target/webrtc-java-demo-api-*.jar' 
    targetFolder: $(Build.ArtifactStagingDirectory)
    overWrite: true
- task: CopyFiles@2
  inputs:
    sourceFolder: $(Build.SourcesDirectory)
    contents: 'webrtc-demo/webrtc-demo-javafx/target/webrtc-java-demo-javafx-*.jar' 
    targetFolder: $(Build.ArtifactStagingDirectory)
    overWrite: true
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: $(Build.ArtifactStagingDirectory)
    artifact: 'webrtc-java-$(Agent.OS)'
    publishLocation: 'pipeline'